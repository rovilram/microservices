version: '2.3'
services:
  nats:
    image: nats:2
    ports:
      - "4222:4222"
  prometheus:
    image: prom/prometheus:v2.45.0
    volumes:
      - "${PWD}/prometheus/config:/etc/prometheus"
      - "${PWD}/prometheus/storage:/prometheus"
    command:
      - "--config.file=/etc/prometheus/prometheus.yml"
      - "--storage.tsdb.path=/prometheus"
      - "--web.console.libraries=/usr/share/prometheus/console_libraries"
      - "--web.console.templates=/usr/share/prometheus/consoles"
    ports:
      - 9090:9090
  grafana:
    image: grafana/grafana
    ports:
      - 3000:3000
    volumes:
      - "${PWD}/grafana:/var/lib/grafana"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=pass
      - GF_USERS_ALLOW_SIGN_UP=false
  jaeger:
    image: jaegertracing/all-in-one
    ports:
      - 16686:16686
      - 14268:14268
      - 14269:14269
      - 5775:5775/udp
      - 4318:4318
      - 6831:6831/udp
      - 6832:6832/udp
      - 5778:5778/tcp
    command:
      - "--log-level=debug"
  api:
    build:
      context: app/moleculerMicroservices/microservice-api/
    image: microservice-api
    environment:
      TRANSPORTER: nats://nats:4222
      SERVICEDIR: services
      PORT: 3000
    ports:
      - "3100:3000"
      - "3130:3030"
    depends_on:
      - prometheus
      - nats
      - jaeger
  orders:
    build:
      context: app/moleculerMicroservices/microservice-orders/
    image: microservice-orders
    environment:
      TRANSPORTER: nats://nats:4222
      SERVICEDIR: services
      PORT: 3000
    depends_on:
      - api 
    ports:
      - "3200:3000"
      - "3230:3030"
  warehouse:
    build:
      context: app/moleculerMicroservices/microservice-warehouse/
    image: microservice-warehouse
    environment:
      TRANSPORTER: nats://nats:4222
      SERVICEDIR: services
      PORT: 3000
    depends_on:
      - api 
    ports:
      - "3300:3000"
      - "3330:3030"